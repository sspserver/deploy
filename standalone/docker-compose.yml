volumes:
  clickhouse_data:
  postgres_data:
  state_data:

x-mixins:
  clickhouse-image: &clickhouse-image
    image: clickhouse/clickhouse-server:24.5.1.1763

services:
  postgres-server:
    image: postgres:17.2
    container_name: ssp-postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.init.env
      - postgres/.env

  clickhouse-server:
    <<: *clickhouse-image
    container_name: ssp-clickhouse
    restart: always
    healthcheck:
      test: ["CMD", "bash", "-c", "clickhouse-client --query \"SELECT value FROM system.settings WHERE name = 'readonly'\" | grep -q '0'"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "./clickhouse/config.xml:/etc/clickhouse-server/config.xml:ro"
      - "./clickhouse/conf.d:/etc/clickhouse-server/conf.d:ro"
      - clickhouse_data:/var/lib/clickhouse:cached
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    cpu_quota: 100000
    mem_limit: "2GB"

  clickhouse-init:
    <<: *clickhouse-image
    container_name: ssp-clickhouse-init
    entrypoint: [ './migrations.sh' ]
    depends_on:
      clickhouse-server:
        condition: service_healthy
    volumes:
      - "./clickhouse/migrations.sh:/migrations.sh:ro"
      - "./clickhouse/migrations/stats:/migrations:ro"
      - "./clickhouse/migrations/stats-gen:/migrations-gen:ro"
      - "state_data:/state"
    environment:
      - REPLICATED=false

  redis:
    image: redis
    restart: always

  ##############################################################################
  # SSP Server services
  ##############################################################################
  ssp:
    image: ghcr.io/sspserver/sspserver:latest
    container_name: ssp-server
    restart: always
    env_file:
      - ./.init.env
      - postgres/.env
      - sspserver/.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres-server
      - clickhouse-server

  api:
    image: ghcr.io/sspserver/api:latest
    container_name: ssp-api
    restart: always
    command: ["--run-migrations"]
    env_file:
      - ./.init.env
      - postgres/.env
      - api/.env
    ports:
      - "8081:8080"
    depends_on:
      postgres-server:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
      clickhouse-init:
        condition: service_started
      redis:
        condition: service_started

  control:
    image: ghcr.io/sspserver/control:latest
    container_name: ssp-control
    restart: always
    env_file:
      - ./.init.env
      - control/.env
    ports:
      - "8082:3000"
    depends_on:
      - api

  ##############################################################################
  ## Web server
  ##############################################################################

  # Build nginx certificate
  # openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/selfsigned.key -out /etc/nginx/ssl/selfsigned.crt

  proxy:
    image: nginx:1.27
    container_name: ssp-webserver
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - ssp
      - api
      - control
    volumes:
      - ./nginx:/etc/nginx/templates
      - ./nginx/ssl:/etc/nginx/ssl
    env_file:
      - ./.init.env
    environment:
      - NGINX_SSP_HOST=ssp
      - NGINX_SSP_PORT=8080
      - NGINX_SSP_PUBLIC_HOST=${SSP_SERVER_DOMAIN}
      - NGINX_API_HOST=api
      - NGINX_API_PORT=8080
      - NGINX_API_PUBLIC_HOST=${SSP_API_DOMAIN}
      - NGINX_CONTROL_HOST=control
      - NGINX_CONTROL_PORT=3000
      - NGINX_CONTROL_PUBLIC_HOST=${SSP_CONTROL_DOMAIN}
